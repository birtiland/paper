接口文档
我参与的：	
//考虑到数据量可能会比较大，这里将问卷投票和答题分开请求，但使用同一个接口，请求到的数据可以先存入本地临时数据
{
    "user_id": 0,
    "paper_type": 0,	//0是问卷，1是答题，2是投票；# 请设置默认值为0 #
    "index": 0,		//请求paper_id为index之后的数据（不含），请设置默认值-1，#二次请求时返回第一次最小的那个paper_id就行
}
case 1:	//问卷，投票
{
    "status",   //0是失败，1是成功
    "data":[    //没有问卷时返回NULL
        {
            "paper_id": "UUID",
            "paper_name": "WWW",
            "last_time": 12345,     //上次答题时间，0表示不显示
            "start_time": 12345,    //问卷开始时间，问卷状态由客户端判断
            "end_time": 12345,      //单位是秒的时间戳
            "paper_type": 0,		//0是问卷，2是投票
        },
        ...
    ],
    "message": "www"  //这是失败或者某些成功状态下要显示给用户的提示信息
}
case 2：	//答题
{
    "status",   //0是失败，1是成功
    "data":[    //没有问卷时返回NULL
        {
            "paper_id": "UUID",
            "paper_name": "WWW",
            "paper_type": 1,		//这里按理说应该是固定的，1是答题
            "start_time": 12345,   //问卷开始时间，问卷状态由客户端判断
            "end_time": 12345, //单位是秒的时间戳
            "score": -1,    //-1表示待批阅，-2表示不显示
            "times": 0	//剩余答题次数，-1表示不显示
        },
        ...
    ],
    "message": "www"  //这是失败或者某些成功状态下要显示给用户的提示信息
}

我创建的
{
    "user_id": 0
}
{
    "status": 0,   //0是失败，1是成功
    "data":[       //没有问卷时返回空数组，注意这里是空数组
        {
            "paper_id": 0,
            "paper_name": "www",
            "status": 0,   //0是已发布，1是已结束
            "star": 1,     //1表示是标星，0是无
            "number": 111,   //答卷数量（和作答人数不一样）
            "paper_type",   //0是问卷，1是答题，2是投票
        },
        ...
    ],
    "message": "www",	//这是失败或者某些成功状态下要显示给用户的提示信息
}

发布一个问卷：
{
    "user_id": 1234,
    "paper_name": "ZZZ",
    "paper_comment": nil,
    "start_time": 1234,   //单位是秒的时间戳，请在客户端设置默认值【发布之时】
    "end_time": 1234,     //单位是秒的时间戳，请在客户端设置默认值【无限制】9999999999
    "paper_type": 0,   //0是问卷，1是答题，2是投票
    "time_limit":0,	//答题限时，-1表示不限时长，单位分钟
    "need_check": 0	//是否需要人工批改，请客户端自行判断 # 如果有的题没设置正确答案，这项一定是1！ #
    "paper_question":{
        "single":[      //没有单选的时候此项为NULL
            {
                "question",
                "options":[     //字符串数组
                    ...
                ],
                "right_answer", //选项的下标  #不设置正确答案时这项为NULL#
                "random",       //0表示不乱序，1是乱序
                "necessary",    //0是不必答
                "score": 1,	//题目分值，请设置默认值0，问卷和投票全为0
                "signed": 0,    //是否有跳转或显示标记，所有与此功能的相关的题都会被标记
                "signed_id":0,  //所有被标记的题都会获得一个被标记id，不同于question_id，请客户端自行编造，后端只进行存储，未标记可以随意设置，我将不再解析（下一项也是）
                "sign": [       //标记信息
                    {
                        "sign_id": 0,       //此题从属于那个题的标记id
                        "option_index": [   //此题从属于那个题的选项下标，和"right_answer"类似，若不需要此项则设为NULL（但要存在此项）
                            ...
                        ]
                    },
                    ...
                ]
            },
            ...
        ],
        "multiple":[    //没有多选的时候此项为NULL
            {
                "question",
                "options":[     //字符串数组
                    ...
                ],
                "right_answer":[    //整型数组，值为正确选项的下标  #不设置正确答案时这项为NULL#
                    ...
                ],
                "random",       //0表示不乱序，1是乱序
                "necessary",    //0是不必答
                "score": 1,	//题目分值，请设置默认值0，问卷和投票全为0
                "signed": 0,    //是否有跳转或显示标记，所有与此功能的相关的题都会被标记
                "signed_id":0,  //所有被标记的题都会获得一个被标记id，不同于question_id，请客户端自行编造，后端只进行存储，未标记的题可以随意设置，我将不再解析（下一项也是）
                "sign": [       //标记信息
                    {
                        "sign_id": 0,       //此题从属于那个题的标记id
                        "option_index": [   //此题从属于那个题的选项下标，和"right_answer"类似，若不需要此项则设为NULL（但要存在此项）
                            ...
                        ]
                    },
                    ...
                ]
            },
            ...
        ],
        "blank":[       //没有填空的时候此项为NULL
            {
                "question",
                "right_answer",     //字符串  #不设置正确答案时这项为NULL#
                "necessary",    //0是不必答
                "score": 1,	//题目分值，请设置默认值0，问卷和投票全为0
                "signed": 0,    //是否有跳转或显示标记，所有与此功能的相关的题都会被标记
                "signed_id":0,  //所有被标记的题都会获得一个被标记id，不同于question_id，请客户端自行编造，后端只进行存储，未标记可以随意设置，我将不再解析（下一项也是）
                "sign": [       //标记信息
                    {
                        "sign_id": 0,       //此题从属于那个题的标记id
                        "option_index": [   //此题从属于那个题的选项下标，和"right_answer"类似，若不需要此项则设为NULL（但要存在此项）
                            ...
                        ]
                    },
                    ...
                ]
            },
            ...
        ],
    },
    "random": 0    //随机类型，0表示不随机，1表示按照题型随机，2表示全部随机
    "times": 0     //答题次数，请在客户端设置默认值1
    "star": 0      //0表示未标星，1表示标星
    "single_number": 1  //单选题抽取数量，默认设置成所有单选题的个数，下面俩一样
    "multiple_number": 1    //多选题抽取数量
    "blank_number": 1       //填空题抽取数量
}
{
    "status":   //0是失败，1是成功
    "message": "www",	//这是失败或者某些成功状态下要显示给用户的提示信息
}

查看标星：
{
    "user_id":1
}
{
    "status":0,         //0是失败，1是成功
    "message": "www",	//这是失败或者某些成功状态下要显示给用户的提示信息
    "data":[
        {
            "paper_id": 1,
            "paper_name": "www",
            "paper_type": 0,        //0是问卷，1是答题，2是投票
            "status": 0,            //0是已发布，1是已结束
            "number": 123           //答卷数量
        },
        ...
    ]
}

修改标星状态：
{
    "user_id": 1,
    "paper_id": 1,
    "star": 0       //目标状态，0表示未标星，1表示标星
}
# 注意这里：如果收到了成功的状态码就把本地的对应paper的标星状态修改成返回的状态就行，不用再请求所有paper了 #
{
    "status":0,         //0是失败，1是成功
    "message": "www",	//这是失败或者某些成功状态下要显示给用户的提示信息
    "data": {
        "paper_id": 1,  # 这里是刚刚修改完的paper的id和标星状态 #
        "star": 0       #       0表示未标星，1表示标星        #
    }
}

获取一张paper：
{
    "paper_id": 1,
    "user_id": 1,
    "paper_type": 1
}
{
    "status":0,         //0是失败，1是成功
    "message": "www",	//这是失败或者某些成功状态下要显示给用户的提示信息
    "data": {
        "paper_name": "www",
        "answer_id": 1,         //这是这张答卷的唯一标识
        "paper_comment": "www",
        "written":              //已作答过，0表示新卷子，1表示继续作答
        "paper_type": 0,
        "time_limit": 0,	    //答题限时，-1表示不限时长，单位分钟
        "single": [
            {
                "question_id": 1,
                "question": "www",
                "options": [
                    ...
                ]
            },
            ...
        ],
        "multiple": [
            {
                "question_id": 1,
                "question": "www",
                "options": [
                    ...
                ]
            },
            ...
        ],
        "blank": [
            {
                "question_id": 1,
                "question": "www"
            },
            ...
        ],
        "answers": {        //没有答案时是null
            "single": [     //整型数组
                ...
            ],
            "mutiple": [    //二维数组
                [],
                ...
            ],
            "blank": [      //字符串数组
                ...
            ]
        }
    }
}